/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { BancorFormula, BancorFormulaInterface } from "../BancorFormula";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromConnectorBalance",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_fromConnectorWeight",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_toConnectorBalance",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_toConnectorWeight",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "calculateCrossConnectorReturn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromReserveBalance",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_fromReserveRatio",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_toReserveBalance",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_toReserveRatio",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "calculateCrossReserveReturn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveBalance",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_totalRatio",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "calculateFundCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveBalance",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_totalRatio",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "calculateLiquidateReturn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveBalance",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_reserveRatio",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_depositAmount",
        type: "uint256",
      },
    ],
    name: "calculatePurchaseReturn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveBalance",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_reserveRatio",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_sellAmount",
        type: "uint256",
      },
    ],
    name: "calculateSaleReturn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

export class BancorFormula__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BancorFormula> {
    return super.deploy(overrides || {}) as Promise<BancorFormula>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BancorFormula {
    return super.attach(address) as BancorFormula;
  }
  connect(signer: Signer): BancorFormula__factory {
    return super.connect(signer) as BancorFormula__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BancorFormulaInterface {
    return new utils.Interface(_abi) as BancorFormulaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BancorFormula {
    return new Contract(address, _abi, signerOrProvider) as BancorFormula;
  }
}
